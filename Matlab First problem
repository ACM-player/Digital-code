function q=First_problem(n,x0,epsilon,k,rho)
Max=10;%这是最大迭代次数,防止死循环
h=(pi/2-0.1)/n;
%% 建立n-1个未知数的符号变量，v就相当于u的近似向量
u=sym('u',[1,n-1]);
u(n)=exact(pi/2);
u0=exact(0.1);
v=[u0,u];
%%  建立非线性方程组
y=sym('y',[1 n-1]);
y(1)=-u0+2*u(1)-u(2)+h^2*k^2*sinh(u(1))-h^2*rho^2;
e=ones(n,1);
A=spdiags([-e 2*e -e],-1:1,n,n);
for j=2:n-1
    y(j)=A(j,j-1)*u(j-1)+A(j,j)*u(j)+A(j,j+1)*u(j+1)+h^2*k^2*sinh(u(j))-h^2*rho^2;
end
%%  Newton法开始迭代
for i=0:Max
    B=jacobian(y,u(1:n-1));
    B1=vpa(subs(B,u(1:n-1),x0'));
    y1=vpa(subs(y,u(1:n-1),x0'));
    x1=x0-inv(B1)*y1';%牛顿迭代公式
    if norm(x1-x0)/norm(x0)<epsilon
        x0=x1;
        break
    else
        x0=x1;
    end
end
q=[u0,x0',u(n)];
end
